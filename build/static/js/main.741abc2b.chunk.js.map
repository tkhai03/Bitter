{"version":3,"sources":["ducks/reducer.js","Components/Dashboard/SidebarOption.js","Components/Dashboard/Sidebar.js","Components/Dashboard/GrieveBox.js","Components/Dashboard/Post.js","Components/Dashboard/Feed.js","Components/Dashboard/Widgets.js","Components/Dashboard/Dashboard.js","Components/Register/Register.js","Components/Landing/Landing.js","Components/Auth/Auth.js","routes.js","App.js","serviceWorker.js","ducks/store.js","index.js","Components/Landing/bitter-chat-background.jpg"],"names":["initialState","email","username","id","loginUser","user","type","payload","SidebarOption","active","text","className","Sidebar","Button","variant","fullWidth","GrieveBox","props","useState","content","setContent","Avatar","placeholder","onChange","e","target","value","onClick","axios","post","then","res","getPosts","Post","editContent","setEditContent","edit","setEdit","put","addLikedPost","delete","Feed","mappedPosts","posts","map","index","date","created_at","key","Widgets","connect","state","getUser","get","logoutUser","withRouter","setPosts","likes","setLikes","getLikedPosts","data","useEffect","isLoggedIn","catch","err","console","log","post_id","history","push","Register","handleInput","setState","name","handleRegister","password","alert","message","this","Component","Landing","register","setRegister","src","bitterLogo","alt","to","Auth","handleLogin","exact","path","component","Dashboard","routes","Boolean","window","location","hostname","match","createStore","action","GET_USER","composeWithDevTools","Router","BrowserRouter","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.741abc2b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst initialState = {\r\n    email: '',\r\n    username:'',\r\n    id: 0\r\n}\r\n//Action constraints\r\nconst LOGIN_USER = 'LOGIN_USER'\r\nconst LOGOUT_USER = 'LOGOUT_USER'\r\nconst GET_USER = 'GET_USER'\r\n//Action creators - functions to perform actions\r\nexport function loginUser(user){\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: user,\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    return {\r\n        type:LOGOUT_USER,\r\n        payload: null,\r\n    }\r\n}\r\n\r\nexport function getUser(){\r\n    const payload = axios.get('/auth/user')\r\n    return{\r\n        type: GET_USER,\r\n        payload: payload,\r\n    }\r\n}\r\n\r\n//Reducer Function - changes state\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n      case LOGIN_USER:\r\n          const {username, id} = action.payload\r\n        return { username, id}\r\n      case LOGOUT_USER:\r\n        return initialState\r\n      case GET_USER + '_PENDING':\r\n        return { ...state }\r\n      case GET_USER + '_FULFILLED':\r\n        return { ...state, username: action.payload.username, id: action.payload.id }\r\n      case GET_USER + '_REJECTED':\r\n        return initialState\r\n      default:\r\n        return initialState\r\n    }\r\n  }","import React from 'react'\r\n\r\n\r\n\r\n\r\nfunction SidebarOption({active, text}){\r\n\r\n    return(\r\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\r\n           <h2>{text}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption","import React from 'react'\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport SidebarOption from './SidebarOption'\r\nimport {Button} from '@material-ui/core'\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\r\nimport TurnedInNotOutlinedIcon from '@material-ui/icons/TurnedInNotOutlined';\r\nimport ListAltOutlinedIcon from '@material-ui/icons/ListAltOutlined';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport '../styles/styles.css'\r\n\r\n\r\n\r\n\r\nfunction Sidebar() {\r\n    return(\r\n        <div className='Sidebar'>\r\n        <SentimentDissatisfiedIcon className='sidebar_bitterIcon'/>\r\n        <h1><HomeOutlinedIcon className='sideIcons'/><SidebarOption text='Home' className='sideText'/></h1>\r\n        <h1><NotificationsOutlinedIcon className='sideIcons'/><SidebarOption text='Notifications' className='sideText'/> </h1>\r\n        <h1><EmailOutlinedIcon className='sideIcons'/> <SidebarOption text='Messages' className='sideText'/> </h1>\r\n        <h1><TurnedInNotOutlinedIcon className='sideIcons'/> <SidebarOption text='Bookmarks' className='sideText'/> </h1>\r\n        <h1><ListAltOutlinedIcon className='sideIcons'/> <SidebarOption text='Lists' className='sideText'/> </h1>\r\n        <h1><PersonOutlineOutlinedIcon className='sideIcons'/> <SidebarOption text='Profile' className='sideText'/> </h1>\r\n        <h1><MoreHorizOutlinedIcon className='sideIcons'/> <SidebarOption text='More' className='sideText'/> </h1>\r\n\r\n        <Button variant=\"outlined\" className=\"sidebar_grieve\" fullWidth>Grieve</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { useState } from 'react'\r\nimport { Avatar, Button } from \"@material-ui/core\"\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction GrieveBox(props) {\r\n    const [content, setContent] = useState('')\r\n    // useEffect(() => {\r\n\r\n    // },[])\r\n\r\n    const addPost = () => {\r\n        axios.post('/api/posts', { content })\r\n            .then((res) => {\r\n                props.getPosts()\r\n                setContent('')\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='grieveBox'>\r\n            <form>\r\n                <div className='grieveBox_input'>\r\n                    <Avatar>OP</Avatar>\r\n                    <input placeholder=\"What's bringing you down?\" onChange={(e) => setContent(e.target.value)}></input>\r\n                </div>\r\n                <Button className=\"grieveBox_grieveButton\" onClick={() => addPost()}>Grieve</Button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default GrieveBox","import React, { useState} from 'react'\r\nimport axios from 'axios'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {Button} from '@material-ui/core'\r\n\r\n\r\nfunction Post(props) {\r\n    const { content, username, id } = props\r\n    const [editContent, setEditContent] = useState(content)\r\n    const [edit, setEdit] = useState(false)\r\n \r\n    \r\n\r\n    const editPost = () => {\r\n        axios.put(`/api/posts/${id}`, { editContent })\r\n            .then((res) => {\r\n                props.getPosts()\r\n                setEdit(false)\r\n            })\r\n    }\r\n\r\n    const deletePost = () => {\r\n        axios.delete(`/api/posts/${id}`)\r\n        .then((res) => {\r\n            props.getPosts()\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!edit ?\r\n                <div className='Post'>\r\n                    <Button className='likeButton' onClick={() => props.addLikedPost(id)}><FavoriteIcon/></Button>\r\n                    <div className='postContent'>\r\n                        <h3>@{username}</h3>\r\n                        <p>{content}</p>\r\n                        {/* {date} */}\r\n                    <button className = 'postButton' onClick={() => setEdit(true)}>Edit</button>\r\n                    <button className = 'postButton' onClick={() => deletePost()}>Delete</button>\r\n                    </div>\r\n                </div> :\r\n                <div className='Post'>\r\n                    <input className='editInput' type='text' value={editContent} onChange={(e) => setEditContent(e.target.value)} />\r\n                    <button className='postEdit' onClick={() => editPost()}>Save</button>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport GrieveBox from './GrieveBox'\r\nimport Post from './Post'\r\nimport Count from './Count'\r\n\r\nfunction Feed(props){\r\n\r\n        const mappedPosts = props.posts.map((post, index) => {\r\n        return <Post content={post.content} username={post.username} date={post.created_at} key={index} id={post.id} getPosts = {props.getPosts} addLikedPost = {props.addLikedPost}/>\r\n    })\r\n    return(\r\n\r\n        <div className='Feed'>\r\n            <div className='feed_header'>\r\n                <h2>Home</h2>\r\n            </div>\r\n                <GrieveBox getPosts = {props.getPosts}/>\r\n                {mappedPosts}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React from 'react'\r\nimport '../styles/styles.css'\r\n\r\nfunction Widgets(){\r\n    return(\r\n        <div className='Widgets'>\r\n            <div className = 'widgetContainer'>\r\n                <div className= 'widgetFeed'>\r\n                    <div className='widgetPost'>\r\n                        <h3 className='widgetUser'>@TEST</h3>\r\n                        <p className='copyPost'>LOREEM IPSUM TEXXT</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getUser, loginUser, logoutUser } from '../../ducks/reducer'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Sidebar from './Sidebar'\r\nimport Feed from './Feed'\r\nimport Widgets from './Widgets'\r\n\r\n\r\n\r\nfunction Dashboard(props) {\r\n    const [posts, setPosts] = useState([])\r\n    const [likes, setLikes] = useState([])\r\n    // const [getLiked, setgetLiked] = useState([])\r\n\r\n    const addLikedPost = (post_id) => {\r\n        axios.post(`/api/likes/${post_id}`)\r\n        .then((res) => {\r\n            getLikedPosts()\r\n            \r\n        })\r\n    }\r\n\r\n    const getLikedPosts = () => {\r\n        axios.get('/api/likes')\r\n        .then((res) => {\r\n            setLikes(res.data)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getPosts()\r\n        getLikedPosts()\r\n    }, [])\r\n\r\n    const getPosts = () => {\r\n        if (!props.isLoggedIn) {\r\n            axios.get('/auth/getUser')\r\n                .then(res => props.loginUser(res.data))\r\n                .catch(err => console.log(err))\r\n            axios.get('/api/posts')\r\n                .then((res) => {setPosts(res.data) \r\n                    console.log(res.data)})\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        axios.delete('/auth/logout')\r\n            .then(() => {\r\n                props.logoutUser()\r\n                props.history.push('/')\r\n            })\r\n    }\r\n    // const mappedPosts = posts.map((post, index) => {\r\n    //     return <Post content={post.content} key={index} date={post.created_at} />\r\n    // })\r\nconsole.log(likes)\r\n    return (\r\n        <div className='bigDashboard'>\r\n            <div className='Dashboard'>\r\n                    <Sidebar />\r\n                    <Feed posts={posts} getPosts = {getPosts} addLikedPost = {addLikedPost}/>\r\n                    <Widgets />\r\n                    <button onClick={logout} className='dashLogout'>Log Out</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStatetoProps, { getUser, loginUser, logoutUser })(withRouter(Dashboard)) ","import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport {loginUser} from '../../ducks/reducer'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Register extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            email:'',\r\n            username: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const {email, username, password} = this.state\r\n        axios\r\n        .post('/auth/register', {email, username, password})\r\n        .then((res) => {\r\n            this.props.loginUser(res.data)\r\n            console.log(this.props)\r\n            this.props.history.push('/dashboard')\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='bigRegister'>\r\n                <div className=\"Register\">\r\n                    <SentimentDissatisfiedIcon className='bitterIcon'/>\r\n                    <h1 className='topText'>Create your account</h1>\r\n                    <div className='inputContainer'>\r\n                        <input className='inputBox' placeholder='Email' name='email' text='text' value={this.state.email} onChange={(e) => {this.handleInput(e)}}/>\r\n\r\n                        <input className='inputBox' placeholder='Username' name='username' text='text' value={this.state.username} onChange={(e) => {this.handleInput(e)}}/>\r\n\r\n                        <input className='inputBox' placeholder='Password' name='password' type='password' value={this.state.password} onChange={(e) => {this.handleInput(e)}}/>\r\n                    </div>\r\n\r\n                    <button className='registerButton' onClick={ () => {this.handleRegister()}} >Register</button>                \r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, {loginUser})(Register))","import React, {useState} from 'react'\r\nimport './Landing.css'\r\nimport bitterLogo from './bitter-chat-background.jpg'\r\nimport {Link} from 'react-router-dom'\r\nimport Register from '../Register/Register'\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\n\r\n\r\nfunction Landing() {\r\n    const [register, setRegister] = useState(false)\r\n    // const [email, setEmail] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n\r\n    return (\r\n        <div className=\"Landing\">\r\n            <img className='bitterLogo'src={bitterLogo} alt='logo' />\r\n            <div className='posterText'>\r\n                <h1 className='posterMsg'>Follow your interests.</h1>\r\n                <h1 className='posterMsg'>Hear what people are talking about.</h1>\r\n                <h1 className='posterMsg'>Join the conversation</h1>\r\n            </div>\r\n            <div className='auth_container'>\r\n                <SentimentDissatisfiedIcon className='landing_bitterIcon'/>\r\n                <div className='loginText'>\r\n                    <h1 className='loginMsg'>See what's happening in the world right now</h1>\r\n                </div>\r\n                <div className='button-container'>\r\n\r\n                    <button className='button1' onClick= {() => setRegister(true)}>Sign up</button>\r\n\r\n                    <Link to='/auth'>\r\n                    <button className='button2'>Log in</button>                  \r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            {register ? <Register/> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing","import axios from 'axios'\r\nimport React, {Component} from 'react'\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport {loginUser} from '../../ducks/reducer'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Auth extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleLogin = (e) => {\r\n        const {email, password} = this.state\r\n\r\n        axios\r\n        .post('/auth/login', {email, password})\r\n        .then((res) => {\r\n            this.props.loginUser(res.data)\r\n            this.props.history.push('/dashboard')\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message)\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='Auth'>\r\n                <div className='loginContainer'>\r\n                <SentimentDissatisfiedIcon className='authBitterIcon'/>\r\n                    <h1 className='authTitle'>Log in to Bitter</h1>\r\n                    <div className='authInputs'>\r\n                        <input className='authEmail' placeholder='Email' name=\"email\" text=\"text\" value={this.state.email} onChange={(e) => {this.handleInput(e)}}/>\r\n                        <input className='authPassword' placeholder='Password' name=\"password\" text=\"text\" value={this.state.password} onChange={(e) => {this.handleInput(e)}}/>\r\n                    </div>\r\n                    <button className='authLoginButton'onClick={ () => {this.handleLogin()}}>Log in</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {loginUser})(Auth)","import {Switch, Route} from 'react-router-dom'\r\nimport React from 'react'\r\nimport Dashboard from './Components/Dashboard/Dashboard'\r\nimport Landing from './Components/Landing/Landing'\r\nimport Auth from './Components/Auth/Auth'\r\nimport Register from './Components/Register/Register'\r\n\r\n\r\nexport default(\r\n    <Switch>\r\n        <Route exact path='/' component={Landing}/>\r\n        <Route path='/dashboard' component={Dashboard}/>\r\n        <Route path='/auth' component={Auth}/>\r\n        <Route path='/register' component={Register}/>\r\n        {/* <Route render={() => <Redirect to=\"/\" />} /> */}\r\n    </Switch>\r\n)","import React from 'react';\nimport './reset.css'\n// import Landing from './Components/Landing/Landing'\nimport routes from './routes'\nimport {withRouter} from 'react-router-dom'\n\nfunction App(props){\n  return(\n    <div className='App'>\n\n      {/* {props.location.pathname === '/' ? <Landing/> : null} */}\n      {routes}\n    </div>\n  )\n}\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport reducer from './reducer'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default createStore( reducer, composeWithDevTools())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport store from './ducks/store'\nconst Router = process.env.NODE_ENV === 'development' ? HashRouter : BrowserRouter;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n    <App />\n    </Router>,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bitter-chat-background.6fff2b05.jpg\";"],"sourceRoot":""}